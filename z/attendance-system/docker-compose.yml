version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'
    ports:
      - '22181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: '1'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'

  attendance_cassandra:
    image: cassandra:latest
    environment:
      - CASSANDRA_USER=username
      - CASSANDRA_PASSWORD=8105xj379jss
    ports:
      - "8100:8100"

  attendance-system:
    container_name: attendance-mysql
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: '8c2xC3597Rs'
    ports:
      - '3307:3306'
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.37.1
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - attendance-event-store
      - attendance-system-service
      - attendance-system-api-gateway


  grafana:
    image: grafana/grafana:8.5.2
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - ./grafana:/var/lib/grafana
    links:
      - prometheus:prometheus
    depends_on:
      - prometheus

  auth:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - '8090:8080'
    environment:
      KEYCLOAK_ADMIN: 'admin'
      KEYCLOAK_ADMIN_PASSWORD: 'admin'
    command:
      - start-dev
      - --import-realm
    volumes:
      - /home/keycloak/realm.json:/opt/keycloak/data/import/realm.json

  attendance-event-store:
    container_name: attendance-event-store
    image: -service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - api-gateway
      - naming-server